{"version":3,"sources":["ApiConfig.js","components/project/CreateNewproject.js","components/Member/Members.js","components/Task/UpdateTask.js","components/Task/DeleteAllTasksToUser.js","components/project/UpdateProjectStatus.js","components/Task/TaskProgressBar.js","components/Task/DeleteTask.js","components/Task/UpdateTaskStatus.js","components/Task/Tasks.js","components/Member/AddMembers.js","components/project/DeletProject.js","components/Task/DeleteAllTasksInProject.js","components/Task/CreateNewTask.js","components/project/ProjectDetails.js","components/project/ProjectsList.js","components/Home.js","components/project/UpdateProject.js","components/SignUp.js","components/Login.js","components/Task/ShowAllTasks.js","components/Sidebar.js","components/Forms.js","App.js","reportWebVitals.js","index.js"],"names":["apiUrls","development","production","API_URL","window","location","hostname","CreateNewproject","props","onSubmit","e","preventDefault","newProject","title","state","startDate","endDate","members","temporaryMembersListForDb","axios","post","Apiconfig","then","res","alert","console","log","setState","redirect","AddUser","memberUserName","userName","get","data","responseMessage","userDetails","membersIndex","slice","findIndex","item","userId","_id","member","temporaryMembersList","concat","AddMember","catch","error","updateProject","put","memebr","role","push","removeMember","splice","memberIndex","status","this","to","membersList","showList","length","map","index","className","href","class","onClick","for","type","onChange","target","value","name","Component","Members","getAllmembers","memberDetails","managerId","isOption","option","UpdateTask","componentDidMount","updateTask","event","patch","taskId","confirm","deleteTaskByID","handleChange","Title","projectId","defaultValue","teamMember","memberName","TaskProgressBar","allTask","complete","progress","percent","width","theme","success","color","DeleteTask","id","delete","Tasks","getAllProjectTasks","toUpdate","updates","update","allProjectTasksDetails","isUpdate","isDelete","task","retorninfo","isUserLoggedInManager","AddMembers","copyMembers","userEmail","body","projectName","allMembers","DeletProject","deleteProjectByID","CreateNewTask","Alert","newTask","Heading","loginHandler","userInfo","user","isLogged","ProjectDetails","deleteMember","projecsDetails","updateMember","showAddMemberForm","showAddTaskForm","projectDetils","userLoggedInId","managerName","getDetails","showAllProjectsDetails","undefined","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","endtDate","pathname","ProjectsList","getAllProject","projecs_list","getProjectDetails","showAllProjectsList","projects","Home","UpdateProject","getChangeData","fieldName","saveChnages","newData","projectTitle","projectStartDate","projectEndDate","projectid","SignUp","changeUserName","changeEmail","email","changepassword","password","registered","_message","bind","placeholder","Login","loginInfo","getEmail","getPassword","ShowAllTasks","allTasks","allMemberTasks","Form","Check","Table","striped","borderless","hover","size","Sidebar","routes","path","exact","sidebar","main","isAuthed","username","style","display","logOut","route","children","Forms","component","App","projectList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22b29476.chunk.js","sourcesContent":["const EXPRESS_PORT = 5000;\r\nconst apiUrls = {\r\n  development: `http://localhost:${EXPRESS_PORT}`,\r\n  production: `/api`,\r\n};\r\nconst API_URL =\r\n  window.location.hostname === \"localhost\"\r\n    ? apiUrls.development\r\n    : apiUrls.production;\r\nexport default API_URL;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport \"../../App.css\";\r\nimport Apiconfig from \"../../ApiConfig\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Swich,\r\n  Link,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nexport default class CreateNewproject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //projects\r\n    this.state = {\r\n      title: \"\",\r\n      role: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      status: \"\",\r\n      userName: \"\",\r\n      temporaryMembersListForDb: [\r\n        {\r\n          userId: props.location.state.userId,\r\n          role: \"manager\",\r\n        },\r\n      ],\r\n      temporaryMembersList: [],\r\n      member: \"\",\r\n    };\r\n  }\r\n  //after user Submit the data\r\n  onSubmit = (e) => {\r\n    /*The Event interface's preventDefault() method tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be. The event continues to propagate as usual, unless one of its event listeners calls stopPropagation() or stopImmediatePropagation(), either of which terminates propagation at once.*/\r\n    e.preventDefault();\r\n    //do not need to refresh the page after user submit it must be forward into home page    event.preventDefault()\r\n    //we need to send that into back end all data from front into back end by axios\r\n    const newProject = {\r\n      title: this.state.title,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate,\r\n      members: this.state.temporaryMembersListForDb\r\n    };\r\n    //we need to post that data into server\r\n    //post registered to this endPoint which back end (Schema) - to MongoDB\r\n    axios.post(`${Apiconfig}/project/new`, newProject).then((res) => {\r\n      alert(\"Project added successfully\");\r\n      console.log(\"Project Data:\", newProject);\r\n      this.setState({ redirect: true });\r\n    });\r\n  };\r\n  //Add user into Project\r\n  AddUser = (e) => {\r\n    /*The Event interface's preventDefault() method tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be. The event continues to propagate as usual, unless one of its event listeners calls stopPropagation() or stopImmediatePropagation(), either of which terminates propagation at once.*/\r\n    e.preventDefault();\r\n    const memberUserName = { userName: this.state.userName };\r\n    //check if input feild empty\r\n    if (memberUserName.userName === \"\") {\r\n      alert(\"No member Selected\");\r\n    } else {\r\n      // let copyMembers = [...this.state.members]\r\n      axios\r\n        .get(`${Apiconfig}/user/check/${this.state.userName}`, memberUserName)\r\n        .then((res) => {\r\n          if (res.data.responseMessage === \"The user is there\") {\r\n            console.log(\"The user data\", res.data.userDetails);\r\n            const temporaryMembersListForDb = this.state.temporaryMembersListForDb.slice();\r\n            const membersIndex = temporaryMembersListForDb.findIndex(\r\n              (item) => item.userId === res.data.userDetails._id\r\n            );\r\n            console.log(membersIndex);\r\n            membersIndex > -1\r\n              ? alert(\"the user already added\")\r\n              : this.setState({\r\n                member: res.data.userDetails,\r\n                temporaryMembersList: this.state.temporaryMembersList.concat(\r\n                  res.data.userDetails\r\n                ),\r\n              });\r\n            // alert(this.state.userName + 'added successfully')\r\n            // copyMembers.push(this.state.userName)\r\n            // this.setState({ members: copyMembers })\r\n            console.log(res.data.userDetails._id);\r\n            // this.state.members.map(m =>{\r\n            //     console.log(m);\r\n            // })\r\n            this.AddMember();\r\n          } else {\r\n            alert(res.data);\r\n          }\r\n          console.log(res.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  };\r\n  //updateProject\r\n  updateProject = () => {\r\n    axios\r\n      .put(`${Apiconfig}/addMembers/${this.state.title}`, {\r\n        members: this.state.temporaryMembersList,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      });\r\n  };\r\n  AddMember = () => {\r\n    const memebr = {\r\n      userId: this.state.member._id,\r\n      role: \"member\",\r\n    };\r\n    console.log(\"memebr\", memebr);\r\n    const temporaryMembersListForDb = this.state.temporaryMembersListForDb.slice();\r\n    const membersIndex = temporaryMembersListForDb.findIndex(\r\n      (item) => item.userId === memebr.userId\r\n    );\r\n    console.log(membersIndex);\r\n    membersIndex === -1\r\n      ? temporaryMembersListForDb.push(memebr)\r\n      : console.log(\"the user already added\");\r\n    this.setState({ temporaryMembersListForDb });\r\n    // console.log(\"object\");\r\n    // this.setState({\r\n    //     temporaryMembersList: getTemporaryMembersList.concat({\r\n    //         userId: this.state.member._id\r\n    //     }),\r\n    //     member: ''\r\n    // })\r\n    console.log(this.state.temporaryMembersListForDb);\r\n    // const membersList = this.state.temporaryMembersList;\r\n    // console.log(membersList);\r\n  };\r\n  removeMember = (member) => {\r\n    // console.log(member);\r\n    const temporaryMembersList = this.state.temporaryMembersList.slice();\r\n    // console.log(temporaryMembersList);\r\n    const membersIndex = temporaryMembersList.findIndex(\r\n      (item) => item.userName === member.userName\r\n    );\r\n    // console.log(\"index:\", membersIndex)\r\n    membersIndex > -1\r\n      ? temporaryMembersList.splice(membersIndex, 1)\r\n      : console.log(\"not there\");\r\n    // console.log(temporaryMembersList);\r\n    const temporaryMembersListForDb = this.state.temporaryMembersListForDb.slice();\r\n    // console.log(typeof memebr);\r\n    const memberIndex = temporaryMembersListForDb.findIndex(\r\n      (item) => item.userId === member._id\r\n    );\r\n    // console.log(\"memberIndex\", memberIndex);\r\n    memberIndex > -1\r\n      ? temporaryMembersListForDb.splice(memberIndex, 1)\r\n      : console.log(\"the user already added\");\r\n    this.setState({\r\n      temporaryMembersList,\r\n      temporaryMembersListForDb,\r\n    });\r\n    // console.log(temporaryMembersListForDb);\r\n    // console.log(temporaryMembersList);\r\n  };\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    const membersList = this.state.temporaryMembersList;\r\n    // console.log(membersList);\r\n    const showList =\r\n      membersList.length !== 0\r\n        ? membersList.map((member, index) => {\r\n          return (\r\n            <div className=\"memberList list-group-item\">\r\n              <p>{member.userName}</p>\r\n              <a href=\"#\">\r\n                <i\r\n                  class=\"fa fa-trash\"\r\n                  onClick={() => this.removeMember(member)}\r\n                ></i>\r\n              </a>\r\n            </div>\r\n          );\r\n        })\r\n        : \"No members\";\r\n    // console.log(this.state.temporaryMembersList);\r\n    return (\r\n      <div>\r\n        <div className=\"card\">\r\n          <h3 className=\"card-header\">New Project</h3>\r\n          <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit}>\r\n              <div className=\"form-group\">\r\n                <label for=\"ProjectName\">Project Name </label>\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      title: e.target.value,\r\n                    });\r\n                  }}\r\n                  value={this.state.title}\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"startDate \">Start Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"start date\"\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      startDate: e.target.value,\r\n                    });\r\n                  }}\r\n                  value={this.state.startDate}\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"EndDate\">End Date</label>\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"end date\"\r\n                  onChange={(e) => {\r\n                    this.setState({\r\n                      endDate: e.target.value,\r\n                    });\r\n                  }}\r\n                  value={this.state.endDate}\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              <div className=\"card-footer\">\r\n                <form>\r\n                  <h4>Add Project Team</h4>\r\n                  <label for=\"addUser\">User Name</label>\r\n                  <div className=\"form-inline mx-sm-3 mb-2\">\r\n                    <input\r\n                      type=\"text\"\r\n                      onChange={(e) => {\r\n                        this.setState({\r\n                          userName: e.target.value,\r\n                          member: \"\",\r\n                        });\r\n                      }}\r\n                      value={this.state.userName}\r\n                      className=\"form-control\"\r\n                    />{\" \"}\r\n                    <input\r\n                      type=\"submit\"\r\n                      className=\"btn btn-danger\"\r\n                      value=\"Add\"\r\n                      onClick={this.AddUser}\r\n                    />\r\n                  </div>\r\n                  {/* {this.state.member !== '' ?\r\n                            <div>\r\n                                <span>{this.state.userName}</span>\r\n                                {/* <input className=\"btn btn-danger btn-black\" value=\"add\" onClick={this.AddMember} /> */}\r\n                  {/* </div> */}\r\n                  {/* : null} */}\r\n                  <div class=\"list-group\">\r\n                    {showList == \"No members\" ? null : showList}\r\n                  </div>\r\n                </form>\r\n                <div className=\"card-footer\">\r\n                  <Link to=\"/\" className=\"btn btn-default\">\r\n                    Cancel\r\n                  </Link>\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-danger btn-black\"\r\n                    value=\"Submit\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          {/* <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-danger btn-black\"\r\n                        value=\"Update Project\" onClick={this.updateProject}\r\n                    /> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"../../ApiConfig\";\r\nclass Members extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: props.userId,\r\n      memberDetails: {},\r\n      managerId: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getAllmembers(this.state.userId);\r\n  }\r\n  getAllmembers = (userId) => {\r\n    axios\r\n      .get(`${API_URL}/member/${userId}`)\r\n      .then((res) => {\r\n        this.setState({ memberDetails: res.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"ERROR:\", error);\r\n      });\r\n    // return (<td>this.state.memberDetails.userName</td>)\r\n  };\r\n\r\n  render() {\r\n    const isOption = this.props.option ? (\r\n      <option value={this.props.userId} className=\"Members\">\r\n        {this.state.memberDetails.userName}\r\n      </option>\r\n    ) : (\r\n        <td>{this.state.memberDetails.userName}</td>\r\n      );\r\n    return <>{isOption} </>;\r\n  }\r\n}\r\nexport default Members;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"../../ApiConfig\";\r\nimport Members from \"../Member/Members\";\r\nimport DeleteAllTasksToUser from \"./DeleteAllTasksToUser\"\r\nclass UpdateTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taskId: props.taskId,\r\n      title: props.Title,\r\n      userId: props.userId,\r\n      projectId: props.projectId,\r\n    };\r\n  }\r\n  componentDidMount = () => { };\r\n  updateTask = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .patch(`${API_URL}/tasks/${this.state.taskId}`, this.state)\r\n      .then((res) => {\r\n        console.log(\"Response Data:\", res.data);\r\n        if (window.confirm(`update this Task?`)) {\r\n          this.deleteTaskByID(this.state.taskId);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"ERROR:\", error);\r\n      });\r\n\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({ userId: e.target.value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.updateTask}>\r\n          <>\r\n            <td>\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  this.setState({ title: e.target.value });\r\n                }}\r\n                value={this.state.title}\r\n                className=\"form-control-from-group\"\r\n                defaultValue={this.state.title}\r\n              />\r\n            </td>\r\n\r\n            <td>\r\n              <select onChange={this.handleChange}>\r\n                {this.props.teamMember.map((memberName) => (\r\n                  <Members\r\n                    value={this.state.userId}\r\n                    userId={memberName.userId}\r\n                    option={true}\r\n                  />\r\n                ))}\r\n              </select>\r\n            </td>\r\n\r\n            {/* <button onClick={<DeleteAllTasksToUser userId={this.state.userId} />}>delete All</button> */}\r\n\r\n            <input\r\n              type=\"submit\"\r\n              className=\"btn btn-danger btn-black\"\r\n              value=\"Submit\"\r\n            />\r\n          </>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateTask;\r\n","import React, { Component } from \"react\";\r\nimport API_URL from \"../../ApiConfig\";\r\nimport axios from \"axios\";\r\n\r\nexport default class DeleteAllTasksToUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userId: props.userId,\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    if (window.confirm(`Delete All task?`)) {\r\n      this.deletetaskByuserID(this.state.userId);\r\n    }\r\n  };\r\n  deletetaskByuserID = (id) => {\r\n    return axios.delete(`${API_URL}/tasks/user/${id}`);\r\n  };\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from 'axios'\r\nimport API_URL from '../../ApiConfig'\r\nexport default class UpdateProjectStatus extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projectId: props.projectId,\r\n      status: props.status,\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    this.updateProjectStatus(this.state.projectid);\r\n  }; \r\n  updateProjectStatus = (id) => {\r\n    axios.patch(`${API_URL}/project/${id}`, this.state.status).then((res) => {\r\n      console.log(\"Response Data:\", res.data);\r\n      this.setState({});\r\n    });\r\n  };\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Progress } from \"react-sweet-progress\";\r\nimport \"react-sweet-progress/lib/style.css\";\r\nexport default class TaskProgressBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        allTask: props.allTask,\r\n        complete: props.complete,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const progress = (this.state.complete / this.state.allTask) * 100;\r\n    // const progress = (this.state.complete.length / this.state.allTask.length) * 100;\r\n\r\n    return (\r\n      <div>\r\n        <Progress\r\n          percent={progress}\r\n          width={7}\r\n          theme={{\r\n            success: {\r\n              color: \"rgb(223, 105, 180)\",\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport API_URL from \"../../ApiConfig\";\r\nimport axios from \"axios\";\r\n\r\nexport default class DeleteTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      taskId: props.taskId,\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    if (window.confirm(`Delete this Task?`)) {\r\n      this.deleteTaskByID(this.state.taskId);\r\n    }\r\n  };\r\n  deleteTaskByID = (id) => {\r\n    return axios.delete(`${API_URL}/tasks/${id}`);\r\n  };\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport API_URL from \"../../ApiConfig\";\r\nimport UpdateProjectStatus from \"../project/UpdateProjectStatus\";\r\nimport TaskProgressBar from './TaskProgressBar'\r\nclass UpdateTaskStatus extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allTasksDetails: props.allTasksDetails,\r\n      complete:[]\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    this.updateOneTaskStat();\r\n  };\r\n  updateOneTaskStat = (event) => {\r\n    event.preventDefault();\r\n    const complete = this.state.complete;\r\n    axios\r\n      .patch(\r\n        `${API_URL}/tasks/${this.state.allTasksDetails._id}`,\r\n        this.state.allTasksDetails.status\r\n      )\r\n      .then((res) => {\r\n        console.log(\"Response Data:\", res.data);\r\n                  complete.push(res.data)\r\nthis.setState({complete})\r\n        this.checkAllTask();\r\n      })\r\n    \r\n  };\r\n  checkAllTask = () => {\r\n    this.state.allTasksDetails.every((taskstatus) => {\r\n      taskstatus.status === true ? (\r\n        <UpdateProjectStatus status={true} pojectId={this.state.projectId} />\r\n      ) : (\r\n        console.log(\"uncomplate\")\r\n      );\r\n    });\r\n        <TaskProgressBar allTask = {this.state.allTasksDetails.length} complete={this.state.complete.length}/>;\r\n  };\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nexport default UpdateTaskStatus;\r\n","import React, { Component } from \"react\";\r\nimport API_URL from \"../../ApiConfig\";\r\nimport axios from \"axios\";\r\nimport UpdateTask from \"./UpdateTask\";\r\nimport UpdateTaskStatus from './UpdateTaskStatus'\r\nimport DeleteTask from \"./DeleteTask\";\r\nclass Tasks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectId: props.projectId,\r\n      userId: props.userId,\r\n      allProjectTasksDetails: [],\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    this.getAllProjectTasks();\r\n  };\r\n  toUpdate = (updates) => {\r\n    const allTasks = updates.map((update) => {\r\n      const allProjectTasksDetails = this.state.allProjectTasksDetails;\r\n      update.isUpdate = false;\r\n      update.isDelete = false;\r\n      allProjectTasksDetails.push(update);\r\n      this.setState({ allProjectTasksDetails });\r\n    });\r\n  };\r\n  getAllProjectTasks = () => {\r\n    axios\r\n      .get(`${API_URL}/tasks/project/${this.state.projectId}`)\r\n      .then((res) => {\r\n        this.toUpdate(res.data);\r\n      });\r\n  };\r\n  update = (task) => {\r\n    task.isUpdate = true;\r\n    this.setState({ task });\r\n  };\r\n  delete = (task) => {\r\n    console.log(task);\r\n    task.isDelete = true;\r\n    this.setState({ task });\r\n  };\r\n  status = (task) => {\r\n    console.log(task);\r\n    task.status = true;\r\n    this.setState({ task });\r\n    <UpdateTaskStatus UpdateTaskStatus={task} />\r\n  };\r\n  render() {\r\n    const allProjectTasksDetails = this.state.allProjectTasksDetails;\r\n    const retorninfo =\r\n      allProjectTasksDetails.length === 0\r\n        ? \"\"\r\n        : allProjectTasksDetails.map((task, index) => {\r\n          console.log(task);\r\n          if (task.isUpdate === true) {\r\n            return (\r\n              <UpdateTask\r\n                taskId={task._id}\r\n                teamMember={this.props.teamMember}\r\n                userId={task.userId}\r\n                title={task.title}\r\n                projectId={task.projectId}\r\n                status={task.status}\r\n              />\r\n            );\r\n          } else if (task.isDelete === true) {\r\n            return <DeleteTask taskId={task._id} />;\r\n          } else {\r\n            <td>{this.props.memberName}</td>;\r\n            if (task.userId === this.state.userId) {\r\n              // return <p>{task.title}</p>; <td>{task.userId}</td>\r\n              return (\r\n                <>\r\n                  \r\n                    <td>\r\n                      <p>{task.title}</p>\r\n                    </td>\r\n                 \r\n                    <td><div\r\n                      className=\"memberList\"\r\n                      onClick={() => this.status(task)}\r\n                    ><i className=\"fa fa-check-square\"></i></div></td>\r\n                 \r\n                  {this.props.isUserLoggedInManager ? (\r\n                    \r\n                      <td>\r\n                        <div\r\n                          className=\"memberList\"\r\n                          onClick={() => this.delete(task)}\r\n                        >\r\n                          <i className=\"fa fa-trash\"></i>\r\n                        </div>\r\n                      </td>\r\n                    \r\n\r\n                  ) : (\r\n                      <td></td>\r\n                    )}\r\n                  {this.props.isUserLoggedInManager ? (\r\n                   \r\n                      <td>\r\n                        <div\r\n                          className=\"memberList\"\r\n                          onClick={() => this.update(task)}\r\n                        >\r\n                          <i className=\"fa fa-edit\"></i>\r\n                        </div>\r\n                      </td>\r\n                   \r\n                  ) : (\r\n                      \r\n                        <td></td>\r\n                      \r\n                    )}\r\n                </>\r\n              );\r\n            }\r\n          }\r\n        });\r\n\r\n    return <div>{retorninfo}</div>;\r\n  }\r\n}\r\n\r\nexport default Tasks;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport Sidebar from \"../Sidebar.js\";\r\nimport Apiconfig from '../../ApiConfig'\r\nexport default class AddMembers extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            userEmail: '',\r\n            members: [],\r\n            projectName: ''\r\n        }\r\n    }\r\n    //Add user into Project\r\n    AddUser = (e) => {\r\n        /*The Event interface's preventDefault() method tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be. The event continues to propagate as usual, unless one of its event listeners calls stopPropagation() or stopImmediatePropagation(), either of which terminates propagation at once.*/\r\n        e.preventDefault()\r\n        let copyMembers = [...this.state.members]\r\n        axios.post(`${Apiconfig}/userss`, this.state.userEmail).then((res) => {\r\n            if (res.data === 'Already Exist') {\r\n                console.log('Email:', this.state.userEmail)\r\n                alert(this.state.userEmail + 'added successfully')\r\n                copyMembers.push(this.state.userEmail)\r\n                this.setState({ members: copyMembers })\r\n            }\r\n            else {\r\n                alert(this.state.userEmail + ' Error! invalid emai')\r\n            }\r\n        });\r\n    }\r\n    //updateProject\r\n    // change the title to Id \r\n    updateProject = () => {\r\n        axios.put(`${Apiconfig}/addMembers/${this.state.title}`, { members: this.state.members }).then((res) => {\r\n            console.log(res)\r\n            console.log(res.body)\r\n        })\r\n    }\r\n    render() {\r\n        let allMembers = this.state.members.map((member) => {\r\n            return <td>member</td>\r\n\r\n        });\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.AddUser}>\r\n\r\n                    <h2>Project</h2>\r\n\r\n\r\n                    <h4>Add Project Team</h4>\r\n\r\n                    <label for=\"ProjectName\">Project Name:</label>\r\n                    <input type=\"text\" onChange={(e) => {\r\n                        this.setState({\r\n                            projectName: e.target.value,\r\n                        });\r\n                    }} value={this.state.projectName} />\r\n\r\n\r\n                    <label for=\"addUser\">User Email:</label>\r\n                    <input type=\"email\" onChange={(e) => {\r\n                        this.setState({\r\n                            userEmail: e.target.value,\r\n                        });\r\n                    }} value={this.state.userEmail} />\r\n\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-danger btn-black\"\r\n                        value=\"check user\"\r\n                    />\r\n\r\n\r\n\r\n                </form>\r\n                <table>\r\n                    <tr>\r\n                        <td>{allMembers}</td>\r\n                    </tr>\r\n                </table>\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-danger btn-black\"\r\n                    value=\"Add Team Members\" onClick={this.updateProject}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport API_URL from \"../../ApiConfig\";\r\nimport axios from \"axios\";\r\nimport DeleteAllTasksInProject from \"../Task/DeleteAllTasksInProject\";\r\nexport default class DeletProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projectId: props.projectId,\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    if (window.confirm(`Delete this project?`)) {\r\n      this.deleteProjectByID(this.state.projectId);\r\n      <DeleteAllTasksInProject projectId={this.state.projectId} />;\r\n    }\r\n  };\r\n  deleteProjectByID = (id) => {\r\n    return axios.delete(`${API_URL}/project/${id}`);\r\n  };\r\n  render() {\r\n    return <></>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport API_URL from \"../../ApiConfig\";\r\nimport axios from \"axios\";\r\n\r\nexport default class DeleeAllTasksInProjet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projectId: props.projectId,\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    this.deleteAllTask(this.state.projectId);\r\n  };\r\n\r\n  deleteAllTask = (id) => {\r\n    return axios.delete(`${API_URL}project/${id}/tasks`);\r\n  };\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport Apiconfig from \"../../ApiConfig\";\r\nimport Members from \"../Member/Members\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nexport default class CreateNewTask extends Component {\r\n  constructor(props) {\r\n    super();\r\n    //projects\r\n    this.state = {\r\n      title: \"\",\r\n      projectId: props.projectId,\r\n      userId: props.teamMember[0].userId,\r\n      status: false,\r\n      // redirect: false,\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    <Alert color=\"danger\">This is a danger alert — check it out!</Alert>;\r\n  };\r\n  //create new task\r\n  newTask = () => {\r\n    <Alert variant=\"danger\" dismissible>\r\n      <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n    </Alert>;\r\n    // e.preventDefault();\r\n    if (this.state.title == \"\") {\r\n      console.log(\"empty\");\r\n\r\n      <Alert variant=\"danger\" dismissible>\r\n        <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n      </Alert>;\r\n    }\r\n    if (this.state.userId === \"\") {\r\n      return <label className=\"err\">please select the member </label>;\r\n    } else {\r\n      axios.post(`${Apiconfig}/project/tasks`, this.state).then((res) => {\r\n        console.log(\"Task Data:\", this.state);\r\n      });\r\n    }\r\n    if (window.confirm(`update this Task?`)) {\r\n      this.deleteTaskByID(this.state.taskId);\r\n    }\r\n  };\r\n  loginHandler = (userInfo) => {\r\n    // const userId = this.state.userId;\r\n    this.setState({ user: userInfo, isLogged: true });\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({ userId: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    // if (this.state.redirect) {\r\n    //   return (\r\n    //     <Redirect\r\n    //       to={{\r\n    //         pathname: `/project/details/${this.state.projectid}`,\r\n    //         state: { projectDetils: this.state.newData },\r\n    //       }}\r\n    //     />\r\n    //   );\r\n    // }\r\n\r\n    console.log(this.props.teamMember);\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          {/* action=\"/action_page.php\" */}\r\n          <form onSubmit={this.newTask}>\r\n            <fieldset>\r\n              <legend>Add Task:</legend>\r\n              <label>Task Title </label> {\"  \"}\r\n              <input\r\n                type=\"text\"\r\n                onChange={(e) => {\r\n                  this.setState({ title: e.target.value });\r\n                }}\r\n                value={this.state.title}\r\n                className=\"form-control-from-group\"\r\n              />\r\n              {\"  \"}\r\n              <select onChange={this.handleChange}>\r\n                {this.props.teamMember.map((memberName) => (\r\n                  <Members\r\n                    value={memberName.userId}\r\n                    userId={memberName.userId}\r\n                    option={true}\r\n                  />\r\n                ))}\r\n              </select>{\" \"}\r\n              {\"  \"}\r\n              <input\r\n                type=\"submit\"\r\n                className=\"btn btn-danger btn-black\"\r\n                value=\"Submit\"\r\n              />\r\n            </fieldset>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Members from \"../Member/Members\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport \"../../App.css\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport Tasks from \"../Task/Tasks\";\r\nimport AddMembers from \"../Member/AddMembers\";\r\nimport DeletProject from \"./DeletProject\";\r\nimport CreateNewTask from \"../Task/CreateNewTask\";\r\nclass ProjectDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      projecsDetails: props.location.state.projectDetils,\r\n      userLoggedInId: props.location.state.userLoggedInId,\r\n      showAddMemberForm: false,\r\n      showAddTaskForm: false,\r\n    };\r\n  }\r\n  deleteMember = (index) => {\r\n    console.log(\"delete btn clicked\");\r\n    <DeletProject projectId={this.state.projecsDetails._id} />;\r\n  };\r\n  updateMember = (index) => {\r\n    console.log(\"update btn clicked\");\r\n  };\r\n\r\n  showAddMemberForm = () => {\r\n    this.setState({ showAddMemberForm: true });\r\n    console.log(this.state.showAddMemberForm);\r\n  };\r\n  showAddTaskForm = () => {\r\n    this.setState({ showAddTaskForm: true });\r\n  };\r\n  render() {\r\n    let isUserLoggedInManager = false;\r\n    let managerName = \"\";\r\n    const getDetails = this.state.projecsDetails.members;\r\n    const showAllProjectsDetails =\r\n      getDetails !== undefined\r\n        ? getDetails.length !== 0\r\n          ? getDetails.map((member) => {\r\n            if (\r\n              member.userId === this.state.userLoggedInId &&\r\n              member.role === \"manager\"\r\n            ) {\r\n              isUserLoggedInManager = true;\r\n              managerName = <Members userId={member.userId} />;\r\n            }\r\n            return (\r\n              <tr>\r\n                <Members userId={member.userId} />\r\n                <Tasks\r\n                  userId={member.userId}\r\n                  projectId={this.state.projecsDetails._id}\r\n                  isDelete={false}\r\n                  teamMember={this.state.projecsDetails.members}\r\n                  isUserLoggedInManager={isUserLoggedInManager}\r\n                />\r\n              </tr>)\r\n          })\r\n          : \"\"\r\n        : \"\";\r\n\r\n    var startDate = new Date(this.state.projecsDetails.startDate);\r\n    var dd = String(startDate.getDate() + 1).padStart(2, \"0\");\r\n    var mm = String(startDate.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n    var yyyy = startDate.getFullYear();\r\n\r\n    startDate = yyyy + \"-\" + mm + \"-\" + dd;\r\n\r\n    var endtDate = new Date(this.state.projecsDetails.endDate);\r\n    var dd = String(endtDate.getDate() + 1).padStart(2, \"0\");\r\n    var mm = String(endtDate.getMonth() + 1).padStart(2, \"0\"); //January is 0!\r\n    var yyyy = endtDate.getFullYear();\r\n\r\n    endtDate = yyyy + \"-\" + mm + \"-\" + dd;\r\n    console.log(this.state.userLoggedInId);\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            <h3>{this.state.projecsDetails.title}</h3>\r\n            {isUserLoggedInManager ? (\r\n              <div>\r\n                {/* <Link to={{\r\n                  pathname: \"/project/update\", state: {\r\n                    id: this.state.projecsDetails._id,\r\n                    title: this.state.projecsDetails.title,\r\n                    startDate: startDate,\r\n                    endDate: endtDate\r\n                  }\r\n                }}>\r\n                  <i className=\"fa fa-trash\">\r\n                  </i>\r\n                </Link> {\" \"} */}\r\n                {isUserLoggedInManager ? (\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/project/update\",\r\n                      state: {\r\n                        id: this.state.projecsDetails._id,\r\n                        title: this.state.projecsDetails.title,\r\n                        startDate: startDate,\r\n                        endDate: endtDate,\r\n                        userLoggedInId: this.props.location.state.userLoggedInId\r\n\r\n                      },\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                  </Link>\r\n                ) : null}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <div className=\"card-body\">\r\n            {/* <p>{this.state.projecsDetails.startDate}</p> */}\r\n            <div className=\"details\">\r\n              <p>Start Date: {startDate}</p>\r\n              <p>End Date: {endtDate}</p>\r\n              <p>Manager: {managerName}</p>\r\n            </div>\r\n            {/* {this.state.showAddMemberForm ? (<></>\r\n              // <AddMembers\r\n              //   projectId={this.state.projecsDetails._id}\r\n              //   showAddMemberForm={this.showAddMemberForm}\r\n              // />\r\n            ) : (\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => this.showAddMemberForm(true)}\r\n                >\r\n                  Add Member\r\n                </button>\r\n              )} */}\r\n            {isUserLoggedInManager ? (\r\n              this.state.showAddTaskForm ? (\r\n                  <CreateNewTask\r\n                    teamMember={this.state.projecsDetails.members}\r\n                    projectId={this.state.projecsDetails._id}\r\n                  />\r\n                ) : (\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      onClick={() => this.showAddTaskForm()}\r\n                    >\r\n                      Add Task\r\n                    </button>\r\n                  )\r\n              ) : ''}\r\n            <table className=\"table\">\r\n              <tr>\r\n                <th>Team Members</th>\r\n                <th>Tasks</th>\r\n                <th>Status</th>\r\n                <th></th>\r\n                <th></th>\r\n              </tr>\r\n              {showAllProjectsDetails}\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div >\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProjectDetails;\r\n","import React, { Component } from \"react\";\r\nimport API_URL from \"../../ApiConfig\";\r\nimport axios from \"axios\";\r\nimport { BrowserRouter as Router, Route, Swich, Link } from \"react-router-dom\";\r\nimport ProjectDetails from \"./ProjectDetails\";\r\nimport TaskProgressBar from \"../Task/TaskProgressBar\";\r\nimport \"../../App.css\";\r\n\r\nclass ProjectsList extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      projecs_list: [],\r\n      userId: props.userId,\r\n    };\r\n\r\n    // this.getProjectDetails = this.getProjectDetails.bind(this)\r\n  }\r\n  componentDidMount = () => {\r\n    this.getAllProject();\r\n  };\r\n  getAllProject = () => {\r\n    axios\r\n      .get(`${API_URL}/user/projects/${this.state.userId}`)\r\n      .then((res) => {\r\n        this.setState({ projecs_list: res.data });\r\n        console.log(res);\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"ERROR:\", error);\r\n      });\r\n  };\r\n\r\n  getProjectDetails = (projectId) => {\r\n    return <ProjectDetails projectId={projectId} />;\r\n  };\r\n  render() {\r\n    console.log(this.props.userId);\r\n    console.log(this.state.projecs_list);\r\n    const showAllProjectsList = this.state.projecs_list.map((projects) => {\r\n      console.log(projects._id);\r\n      return (\r\n        <div  >\r\n          <p>\r\n            {\" \"}\r\n            <Link\r\n              to={{\r\n                pathname: `/project/details/${projects._id}`,\r\n                state: {\r\n                  projectDetils: projects,\r\n                  userLoggedInId: this.state.userId,\r\n                },\r\n              }}\r\n              className=\"projectList cardlist\"\r\n              onClick={() => this.getProjectDetails(projects._id)}\r\n            >\r\n              {\" \"}\r\n              <p className=\"title\">{projects.title}</p>\r\n              <div class=\"bar\"><TaskProgressBar />\r\n                {/* <div class=\"emptybar\"></div>\r\n                <div class=\"filledbar\"></div> */}\r\n              </div>{\" \"}\r\n\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      );\r\n    });\r\n    return <div className=\"ProjectsList\">{showAllProjectsList}</div>;\r\n  }\r\n}\r\n\r\nexport default ProjectsList;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Swich, Link } from \"react-router-dom\";\r\nimport CreateNewproject from \"./project/CreateNewproject\";\r\nimport ProjectsList from \"./project/ProjectsList\";\r\nexport default class Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>welcome</h1>{\" \"}\r\n        {/* <Link\r\n          className=\"fa fa-file-text-o icon-wrapper project-name items\"\r\n          to={{\r\n            pathname: \"/newProject\",\r\n            state: {\r\n              userId: this.props.userId,\r\n            },\r\n          }}\r\n        >     <p className=\"pragraphNewProject\">New Project</p>\r\n        </Link>\r\n        <p className=\"line\">My Project</p> */}\r\n        <Link\r\n          to={{\r\n            pathname: \"/newProject\",\r\n            state: {\r\n              userId: this.props.userId,\r\n            },\r\n          }}\r\n        // className=\"fa fa-file-text-o icon-wrapper project-name items\"\r\n        >\r\n          <p className=\"pragraphNewProject\">New Project</p>\r\n        </Link>\r\n        <p className='line'>My Project</p>\r\n        <ProjectsList userId={this.props.userId} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport API_URL from \"../../ApiConfig\";\r\nimport { BrowserRouter as Router, Route, Switch, Link, Redirect } from \"react-router-dom\";\r\n\r\nclass UpdateProject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projectid: props.location.state.id,\r\n            projectTitle: props.location.state.title,\r\n            projectStartDate: props.location.state.startDate,\r\n            projectEndDate: props.location.state.endDate,\r\n            newData: {},\r\n            userLoggedInId: props.location.state.userLoggedInId,\r\n            redirect: false\r\n        }\r\n    }\r\n\r\n    getChangeData = (event) => {\r\n        let fieldName = event.target.name;\r\n        this.setState({\r\n            [fieldName]: event.target.value\r\n        })\r\n        console.log(this.state[fieldName]);\r\n    }\r\n\r\n    saveChnages = (event) => {\r\n        event.preventDefault();\r\n        const newData = {\r\n            \"title\": this.state.projectTitle,\r\n            \"startDate\": this.state.projectStartDate,\r\n            \"endDate\": this.state.projectEndDate\r\n        };\r\n        axios.patch(`${API_URL}/project/update/${this.state.projectid}`, newData)\r\n            .then(res => {\r\n                console.log('Response Data:', res.data)\r\n                this.setState({\r\n                    newData: res.data,\r\n                    redirect: true\r\n                })\r\n\r\n            })\r\n            .catch(error => {\r\n                console.log(\"ERROR:\", error);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.userLoggedInId);\r\n        if (this.state.redirect) {\r\n            return <Redirect to={{\r\n                pathname: `/project/details/${this.state.projectid}`\r\n                , state:\r\n                {\r\n                    projectDetils: this.state.newData,\r\n                    userLoggedInId: this.state.userLoggedInId\r\n                }\r\n            }\r\n            } />;\r\n        }\r\n        console.log(this.state.projectEndDate);\r\n        return (\r\n            <div className=\"card\">\r\n                <h3 className=\"card-header\">Update Project Details</h3>\r\n                <div className=\"card-body\">\r\n                    <form onSubmit={this.saveChnages}>\r\n                        <fieldset>\r\n                            <div class=\"form-group\">\r\n                                <label>Project title</label>\r\n                                <input type=\"text\" name=\"projectTitle\" class=\"form-control\" defaultValue={this.state.projectTitle} onChange={this.getChangeData} />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Start Date</label>\r\n                                <input type=\"date\" name=\"projectStartDate\" class=\"form-control\" defaultValue={this.state.projectStartDate} onChange={this.getChangeData} />\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>End Date</label>\r\n                                <input type=\"date\" class=\"form-control\" name=\"projectEndDate\" defaultValue={this.state.projectEndDate} onChange={this.getChangeData} />\r\n                            </div>\r\n\r\n                            <div className=\"card-footer\">\r\n                                <Link to=\"/\" className=\"btn btn-default\">Cancel</Link>\r\n                                {/* <Link to={{ pathname: `/project/details/${this.state.projectid}`, state: { projectDetils: this.state.newData } }} className=\"btn btn-success\" >Save</Link> */}\r\n                                {/* <Link to={{ pathname: `/project/details/${this.state.projectid}`, state: { projectDetils: this.state.newData } }} className=\"btn btn-success\" >Save</Link> */}\r\n                                <button type=\"submit\" className=\"btn btn-danger\" >Save</button>\r\n                            </div>\r\n                        </fieldset>\r\n                    </form>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateProject;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from 'axios';\r\nimport API_URL from \"../ApiConfig\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class SignUp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    }\r\n    this.changeUserName = this.changeUserName.bind(this);\r\n    this.changeEmail = this.changeEmail.bind(this);\r\n    this.changepassword = this.changepassword.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  changeUserName = (event) => {\r\n    //change userName by user name that write it by user\r\n    this.setState({\r\n      userName: event.target.value,\r\n    });\r\n  };\r\n  //change changeEmail by user email that write it by user\r\n  changeEmail = (event) => {\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n  };\r\n  //change changepassword by user password that write it by user\r\n  changepassword = (event) => {\r\n    this.setState({\r\n      password: event.target.value,\r\n    });\r\n  };\r\n  //after user Submit the data\r\n  onSubmit = (event) => {\r\n    /*The Event interface's preventDefault() method tells the user agent that if the event does not get explicitly handled, its default action should not be taken as it normally would be. The event continues to propagate as usual, unless one of its event listeners calls stopPropagation() or stopImmediatePropagation(), either of which terminates propagation at once.*/\r\n    event.preventDefault();\r\n    //do not need to refresh the page after user submit it must be forward into home page    event.preventDefault()\r\n    //we need to send that into back end all data from front into back end by axiod\r\n    const registered = {\r\n      userName: this.state.userName,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    //we need to post that data into server\r\n    //post registered to this endPoint which back end (Schema) - to MongoDB\r\n    axios.post(`${API_URL}/signUp`, registered).then((res) => {\r\n      console.log(\"Response Data:\", res.data);\r\n      if (res.data === \"Already Exist\") {\r\n        alert(\"You Already have account please login\");\r\n      }\r\n      if (res.data._message === \"User validation failed\") {\r\n        alert(\"Error!!\");\r\n      } else {\r\n        this.props.loginHandler(res.data);\r\n        alert(\"Welcome\");\r\n        console.log(\"User Data\", registered);\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isLogged ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n            <div>\r\n              <div className=\"container\">\r\n                <form onSubmit={this.onSubmit}>\r\n                  <h3>Sign Up</h3>\r\n                  <div className=\"form-group\">\r\n                    <label>User Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      placeholder=\"User Name \"\r\n                      onChange={(e) => {\r\n                        this.changeUserName(e);\r\n                      }}\r\n                      value={this.state.userName}\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input\r\n                      type=\"email\"\r\n                      placeholder=\"Email \"\r\n                      onChange={(e) => {\r\n                        this.changeEmail(e);\r\n                      }}\r\n                      value={this.state.email}\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                      type=\"password\"\r\n                      placeholder=\"Password \"\r\n                      onChange={(e) => {\r\n                        this.changepassword(e);\r\n                      }}\r\n                      value={this.state.password}\r\n                      className=\"form-control\"\r\n                    />\r\n                  </div>\r\n                  <input\r\n                    type=\"submit\"\r\n                    className=\"btn btn-danger btn-black\"\r\n                    value=\"Sign Up\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport axios from \"axios\";\r\nimport Apiconfig from \"../ApiConfig\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n    };\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.getEmail = this.getEmail.bind(this);\r\n    this.getPassword = this.getPassword.bind(this);\r\n  }\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const loginInfo = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    axios.post(`${Apiconfig}/login`, loginInfo).then((res) => {\r\n      console.log(\"Response Data:\", res.data, res.data._id);\r\n      if (typeof res.data === \"object\") {\r\n        // this.setState({ userId: res.data._id, isLogged:true });\r\n        this.props.loginHandler(res.data);\r\n        console.log(\"Correct email and password\");\r\n      }\r\n      if (res.data === \"Password is not correct\") {\r\n        console.log(\"Wrong Password\");\r\n      }\r\n      if (res.data === \"Email does not exist\") {\r\n        console.log(\"Email does not exist\");\r\n      }\r\n    });\r\n  };\r\n  getEmail = (event) => {\r\n    this.setState({\r\n      email: event.target.value,\r\n    });\r\n    console.log(this.state.email);\r\n  };\r\n  getPassword = (event) => {\r\n    this.setState({\r\n      password: event.target.value,\r\n    });\r\n    console.log(this.state.password);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.isLogged ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-div\">\r\n              <form onSubmit={this.onSubmit}>\r\n                <h3>Sign In</h3>\r\n                <label>Email address</label> <br />\r\n                <input\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email \"\r\n                  onChange={(e) => {\r\n                    this.getEmail(e);\r\n                  }}\r\n                  value={this.state.email}\r\n                  className=\"form-control\"\r\n                />\r\n                <br />\r\n                <label>Password</label>\r\n                <br />\r\n                <input\r\n                  type=\"password\"\r\n                  placeholder=\"Password \"\r\n                  onChange={(e) => {\r\n                    this.getPassword(e);\r\n                  }}\r\n                  value={this.state.password}\r\n                  className=\"form-control\"\r\n                />\r\n                <br />\r\n                <br />\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-danger btn-black\"\r\n                  value=\"Log in\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport API_URL from \"../../ApiConfig\";\r\nimport axios from \"axios\";\r\nimport { Table, Form} from \"react-bootstrap\";\r\n\r\nclass ShowAllTasks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      projectId: props.projectId,\r\n      userId: props.userId,\r\n      allTasks: \"\",\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    this.getAllProjectTasks();\r\n  };\r\n\r\n  getAllProjectTasks = () => {\r\n    axios\r\n      .get(`${API_URL}/allTasks/${this.state.userId}`)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        this.setState({ allTasks: res.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"ERROR:\", error);\r\n      });\r\n    // return (<td>this.state.memberDetails.userName</td>)\r\n  };\r\n  render() {\r\n    const allTasks = this.state.allTasks;\r\n    const allMemberTasks =\r\n      allTasks.length === 0\r\n        ? \"\"\r\n        : allTasks.map((task, index) => {\r\n            if (task.userId === this.state.userId) {\r\n              console.log(task.title);\r\n              return (\r\n                <tr>\r\n                  <td>\r\n                  <Form.Check type=\"checkbox\"  />\r\n                  </td>\r\n                  <td>{task.title}</td>\r\n                </tr>\r\n              );\r\n            }\r\n          });\r\n    return (\r\n      // <div>\r\n      //     {allMemberTasks}\r\n      // </div>\r\n      <div className=\"taskTable\">\r\n      <Table striped borderless hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>Status</th>\r\n            <th>Task</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>{allMemberTasks}</tbody>\r\n      </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowAllTasks;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport ProjectsList from \"./project/ProjectsList\";\r\nimport UpdateProject from \"./project/UpdateProject\";\r\nimport SignUp from \"./SignUp.js\";\r\nimport Login from \"./Login.js\";\r\nimport CreateNewproject from \"./project/CreateNewproject\";\r\nimport Members from \"./Member/Members\";\r\nimport DeleteProject from \"./project/DeletProject\";\r\nimport ProjectDetails from \"./project/ProjectDetails\";\r\nimport AddMembers from \"./Member/AddMembers\";\r\nimport ShowAllTasks from \"./Task/ShowAllTasks\";\r\nimport \"../App.css\";\r\n\r\nexport default class Sidebar extends Component {\r\n  render() {\r\n    // <div class=\"dropdown-container\">\r\n    //   <a href=\"#\">Link 1</a>\r\n    //   <a href=\"#\">Link 2</a>\r\n    //   <a href=\"#\">Link 3</a>\r\n    // </div>;\r\n\r\n    const routes = [\r\n      {\r\n        path: \"/\",\r\n        exact: true,\r\n        sidebar: () => <div></div>,\r\n        main: (props) => <Home userId={this.props.userId} isAuthed={true} />,\r\n      },\r\n      {\r\n        path: \"/newProject\",\r\n        exact: true,\r\n        sidebar: () => <div></div>,\r\n        main: (props) => (\r\n          <CreateNewproject username={this.props.username} {...props} />\r\n        ),\r\n      },\r\n      {\r\n        path: \"/project/update\",\r\n        exact: true,\r\n        sidebar: () => <div></div>,\r\n        main: (props) => <UpdateProject {...props} />,\r\n      },\r\n      {\r\n        path: \"/project/delete\",\r\n        exact: true,\r\n        sidebar: () => <div></div>,\r\n        main: () => <DeleteProject />,\r\n      },\r\n      {\r\n        path: \"/ShowAllTasks\",\r\n        exact: true,\r\n        sidebar: () => <div></div>,\r\n        main: (props) => <ShowAllTasks userId={this.props.userId} {...props} />\r\n      },\r\n      {\r\n        path: \"/project/list\",\r\n        exact: true,\r\n        sidebar: () => <div></div>,\r\n        main: () => <ProjectsList />,\r\n      },\r\n      // ,{\r\n      //   path: \"/project/new\",\r\n      //   exact: true,\r\n      //   sidebar: () => <div></div>,\r\n      //   main: () => <CreateNewProject />,\r\n      // }\r\n      {\r\n        path: \"/signup\",\r\n        exact: true,\r\n        sidebar: () => <div></div>,\r\n        main: () => <SignUp loginHandler={this.props.loginHandler} />,\r\n      },\r\n      {\r\n        path: \"/login\",\r\n        exact: true,\r\n        sidebar: () => <div></div>,\r\n        main: () => <Login loginHandler={this.props.loginHandler} />,\r\n      },\r\n      {\r\n        path: \"/members\",\r\n        exact: true,\r\n        sidebar: () => <div></div>,\r\n        main: () => <Members />,\r\n      },\r\n      {\r\n        path: \"/project/details/:id\",\r\n        exact: true,\r\n        sidebar: () => <div></div>,\r\n        main: (props) => <ProjectDetails {...props} />,\r\n      },\r\n      {\r\n        path: \"/AddMember\",\r\n        exact: true,\r\n        sidebar: () => <div></div>,\r\n        main: () => <AddMembers />,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <Router>\r\n        <div style={{ display: \"flex\" }}>\r\n          <div className=\"navbar\">\r\n            <header>project managment</header>\r\n            <ul>\r\n              <li className=\"fas fa-home\">\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"\">\r\n                <Link to=\"/ShowAllTasks\">My Tasks</Link>\r\n              </li>\r\n              <li className=\"\">\r\n                <Link to=\"/\" onClick={this.props.logOut}>\r\n                  Log Out\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n            <Switch>\r\n              {routes.map((route, index) => (\r\n                <Route\r\n                  key={index}\r\n                  path={route.path}\r\n                  exact={route.exact}\r\n                  children={(props) => <route.sidebar {...props} />}\r\n                />\r\n              ))}\r\n            </Switch>\r\n          </div>\r\n\r\n          <div className=\"main\"></div>\r\n\r\n          <Switch>\r\n            {routes.map((route, index) => (\r\n              <Route\r\n                key={index}\r\n                path={route.path}\r\n                exact={route.exact}\r\n                children={(props) => <route.main {...props} />}\r\n              />\r\n            ))}\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../form.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport SignUp from \"./SignUp\";\r\nimport Login from \"./Login\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nexport default class Forms extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to={\"/sign-in\"}>\r\n                    Login\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to={\"/sign-up\"}>\r\n                    Sign up\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </nav>\r\n\r\n          <div className=\"auth-wrapper\">\r\n            <div className=\"auth-inner\">\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/\"\r\n                  component={() => (\r\n                    <Login loginHandler={this.props.loginHandler} />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/sign-in\"\r\n                  component={() => (\r\n                    <Login loginHandler={this.props.loginHandler} />\r\n                  )}\r\n                />\r\n                <Route\r\n                  path=\"/sign-up\"\r\n                  component={() => (\r\n                    <SignUp loginHandler={this.props.loginHandler} />\r\n                  )}\r\n                />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Forms from \"./components/Forms\";\r\nexport default class App extends Component {\r\n  constructor() {\r\n    super();\r\n    //signUp faild\r\n    this.state = {\r\n      user: {},\r\n      isLogged: false,\r\n    };\r\n    this.loginHandler = this.loginHandler.bind(this);\r\n    this.logOut = this.logOut.bind(this);\r\n  }\r\n  loginHandler = (userInfo) => {\r\n    // const userId = this.state.userId;\r\n    this.setState({ user: userInfo, isLogged: true });\r\n  };\r\n\r\n  logOut = () => {\r\n    this.setState({ isLogged: false, user: {}, projectList: [] });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.state.isLogged ? (\r\n          <div >\r\n            <Sidebar\r\n            \r\n              userId={this.state.user._id}\r\n              isLogged={this.props.isLogged}\r\n              userName={this.state.user.userName}\r\n              isLogged={this.state.isLogged}\r\n              logOut={this.logOut}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div>\r\n              <div>\r\n                <Forms loginHandler={this.loginHandler} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"react-sweet-progress/lib/style.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}